parameters:
  paralus:
    =_metadata:
      multi_instance: true
    namespace: syn-paralus

    charts:
      ztka:
        source: https://paralus.github.io/helm-charts
        version: 0.3.0

    images:
      busybox:
        registry: docker.io
        repository: library/busybox
        tag: latest
      dbCronJob:
        registry: docker.io
        repository: library/postgres
        tag: latest

    dashboard_container_port: 8000

    openshift_compatibility: false

    httpProxyParalus:
      # A valid Contour `loadBalancerPolicy`, cf.
      # https://projectcontour.io/docs/1.24/config/request-routing/#load-balancing-strategy.
      # The contents of this field are applied to each entry of the `console`
      # HTTPProxy `spec.routes` which has the Paralus service as the backend.
      loadBalancerPolicy:
        strategy: Cookie

    db_args:
      # Default setting in Helm chart
      sslmode: disable

    dbCronJob:
      schedule: "0 2 * * *"  # Set the CronJob schedule
      jobHistoryLimit:
        failed: 1
        successful: 3
      retention: 30  # Retention period for the audit logs in days

    helm_values: # Refer to docs: https://github.com/paralus/helm-charts/blob/main/charts/ztka/values.yaml
      replicaCount: 2

      analytics:
        enable: false

      deploy:
        postgresql:
          enable: false
          address: "foo"
          username: "foo"
          password: "foo"
          database: "foo"

      autoscaling:
        enabled: false
        minReplicas: 1
        maxReplicas: 10
        targetCPUUtilizationPercentage: 80

      fluent-bit:
        # Configure PG sslmode via env var for fluent bit. This should work as
        # expected, cf.
        # https://docs.fluentbit.io/manual/pipeline/outputs/postgresql#libpq
        # The libpq env var for the sslmode connection argument is PGSSLMODE,
        # cf. https://www.postgresql.org/docs/current/libpq-envars.html
        env:
          - name: PGSSLMODE
            value: ${paralus:db_args:sslmode}
