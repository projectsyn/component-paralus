parameters:
  kapitan:
    dependencies:
      - type: helm
        source: ${paralus:charts:ztka:source}
        chart_name: ztka
        version: ${paralus:charts:ztka:version}
        output_path: ${_base_directory}/helmcharts/paralus/${paralus:charts:ztka:version}/
    compile:
      - input_paths:
          - ${_base_directory}/component/app.jsonnet
        input_type: jsonnet
        output_path: apps/
      - input_paths:
          - ${_base_directory}/component/main.jsonnet
        input_type: jsonnet
        output_path: paralus/
      - input_paths:
          - ${_base_directory}/helmcharts/paralus/${paralus:charts:ztka:version}
        input_type: helm
        output_path: paralus/10_helmchart
        helm_values: ${paralus:helm_values}
        helm_params:
          name: ztka
          namespace: ${paralus:namespace}
          dependency_update: true
  commodore:
    postprocess:
      filters:
        - type: jsonnet
          path: paralus/10_helmchart/ztka/templates
          filter: postprocess/patch_paralus.jsonnet
        - type: jsonnet
          path: paralus/10_helmchart/ztka/templates
          filter: postprocess/patch_ingress.jsonnet
        - type: jsonnet
          path: paralus/10_helmchart/ztka/templates
          filter: postprocess/patch_httpproxy.jsonnet
        - type: jsonnet
          path: paralus/10_helmchart/ztka/charts/kratos/templates
          filter: postprocess/patch_kratos.jsonnet

  paralus:
    namespace: "syn-paralus"
    dbCronJob:
      schedule: "0 2 * * *"  # Set the CronJob schedule
      jobHistoryLimit:
        failed: 1
        successful: 3
      retention: "30"  # Retention period for the audit logs in days
      image: "postgres:latest"  # Image to use for the CronJob
