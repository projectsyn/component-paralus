apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    helm.sh/hook: post-upgrade,post-rollback
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: '-2'
  name: kratos-restart
  namespace: syn-paralus
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    helm.sh/hook: post-upgrade,post-rollback
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: '-2'
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: paralus
    app.kubernetes.io/version: v0.2.8
    helm.sh/chart: ztka-0.2.10
  name: kratos-restart
  namespace: syn-paralus
rules:
  - apiGroups:
      - apps
    resourceNames:
      - ztka-kratos
    resources:
      - deployments
    verbs:
      - get
      - patch
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    helm.sh/hook: post-upgrade,post-rollback
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: '-1'
  labels:
    app.kubernetes.io/component: job
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: paralus
    app.kubernetes.io/version: v0.2.8
    helm.sh/chart: ztka-0.2.10
  name: kratos-restart
  namespace: syn-paralus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kratos-restart
subjects:
  - kind: ServiceAccount
    name: kratos-restart
    namespace: syn-paralus
---
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    helm.sh/hook: post-upgrade,post-rollback
    helm.sh/hook-delete-policy: hook-succeeded
    helm.sh/hook-weight: '0'
  labels:
    app.kubernetes.io/component: job
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: paralus
    app.kubernetes.io/version: v0.2.8
    helm.sh/chart: ztka-0.2.10
  name: kratos-restart
spec:
  activeDeadlineSeconds: 600
  backoffLimit: 2
  template:
    spec:
      containers:
        - command:
            - kubectl
            - rollout
            - restart
            - deployment/ztka-kratos
          image: bitnami/kubectl
          name: kubectl
      restartPolicy: Never
      serviceAccountName: kratos-restart
