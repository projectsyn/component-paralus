apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels:
    app.kubernetes.io/component: envoy
    app.kubernetes.io/instance: ztka
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: contour
    helm.sh/chart: contour-7.8.0
  name: ztka-contour-envoy
  namespace: syn-paralus
spec:
  selector:
    matchLabels:
      app.kubernetes.io/component: envoy
      app.kubernetes.io/instance: ztka
      app.kubernetes.io/name: contour
  template:
    metadata:
      labels:
        app.kubernetes.io/component: envoy
        app.kubernetes.io/instance: ztka
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/name: contour
        helm.sh/chart: contour-7.8.0
    spec:
      affinity:
        nodeAffinity: null
        podAffinity: null
        podAntiAffinity: null
      automountServiceAccountToken: false
      containers:
        - args:
            - envoy
            - shutdown-manager
          command:
            - contour
          image: docker.io/bitnami/contour:1.20.1-debian-10-r53
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              exec:
                command:
                  - contour
                  - envoy
                  - shutdown
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: 8090
            initialDelaySeconds: 120
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          name: shutdown-manager
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - mountPath: /admin
              name: envoy-admin
        - args:
            - -c
            - /config/envoy.json
            - --service-cluster $(CONTOUR_NAMESPACE)
            - --service-node $(ENVOY_POD_NAME)
            - --log-level info
          command:
            - envoy
          env:
            - name: CONTOUR_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: ENVOY_POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
          image: docker.io/bitnami/envoy:1.21.1-debian-10-r55
          imagePullPolicy: IfNotPresent
          lifecycle:
            preStop:
              httpGet:
                path: /shutdown
                port: 8090
                scheme: HTTP
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /ready
              port: 8002
            initialDelaySeconds: 120
            periodSeconds: 20
            successThreshold: 1
            timeoutSeconds: 5
          name: envoy
          ports:
            - containerPort: 8080
              hostPort: 80
              name: http
              protocol: TCP
            - containerPort: 8443
              hostPort: 443
              name: https
              protocol: TCP
            - containerPort: 8002
              name: metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8002
            initialDelaySeconds: 10
            periodSeconds: 3
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits: {}
            requests: {}
          securityContext:
            runAsUser: 1001
          volumeMounts:
            - mountPath: /config
              name: envoy-config
            - mountPath: /certs
              name: envoycert
            - mountPath: /admin
              name: envoy-admin
      dnsPolicy: ClusterFirst
      hostNetwork: false
      initContainers:
        - args:
            - bootstrap
            - /config/envoy.json
            - --xds-address=ztka-contour
            - --xds-port=8001
            - --resources-dir=/config/resources
            - --envoy-cafile=/certs/ca.crt
            - --envoy-cert-file=/certs/tls.crt
            - --envoy-key-file=/certs/tls.key
          command:
            - contour
          env:
            - name: CONTOUR_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          image: docker.io/bitnami/contour:1.20.1-debian-10-r53
          imagePullPolicy: IfNotPresent
          name: envoy-initconfig
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - mountPath: /config
              name: envoy-config
            - mountPath: /certs
              name: envoycert
              readOnly: true
            - mountPath: /admin
              name: envoy-admin
      restartPolicy: Always
      serviceAccountName: ztka-contour-envoy
      terminationGracePeriodSeconds: 300
      volumes:
        - emptyDir: {}
          name: envoy-admin
        - emptyDir: {}
          name: envoy-config
        - name: envoycert
          secret:
            secretName: envoycert
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 10%
    type: RollingUpdate
